/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ThesisDTO } from './ThesisDTO';
import {
    ThesisDTOFromJSON,
    ThesisDTOFromJSONTyped,
    ThesisDTOToJSON,
    ThesisDTOToJSONTyped,
} from './ThesisDTO';

/**
 * 
 * @export
 * @interface EducationDTO
 */
export interface EducationDTO {
    /**
     * 
     * @type {number}
     * @memberof EducationDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof EducationDTO
     */
    degree: EducationDTODegreeEnum;
    /**
     * 
     * @type {string}
     * @memberof EducationDTO
     */
    course: string;
    /**
     * 
     * @type {string}
     * @memberof EducationDTO
     */
    institution: string;
    /**
     * 
     * @type {string}
     * @memberof EducationDTO
     */
    classification?: string;
    /**
     * 
     * @type {string}
     * @memberof EducationDTO
     */
    status: EducationDTOStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof EducationDTO
     */
    courseCode?: string;
    /**
     * 
     * @type {Date}
     * @memberof EducationDTO
     */
    startDate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof EducationDTO
     */
    endDate: Date;
    /**
     * 
     * @type {ThesisDTO}
     * @memberof EducationDTO
     */
    thesis?: ThesisDTO;
}


/**
 * @export
 */
export const EducationDTODegreeEnum = {
    PrimaryEducation: 'PrimaryEducation',
    SecondaryEducation: 'SecondaryEducation',
    Bachelor: 'Bachelor',
    Postgraduate: 'Postgraduate',
    Master: 'Master',
    Doctorate: 'Doctorate',
    PostDoctorate: 'PostDoctorate',
    Other: 'Other'
} as const;
export type EducationDTODegreeEnum = typeof EducationDTODegreeEnum[keyof typeof EducationDTODegreeEnum];

/**
 * @export
 */
export const EducationDTOStatusEnum = {
    Ongoing: 'Ongoing',
    Attended: 'Attended',
    Concluded: 'Concluded'
} as const;
export type EducationDTOStatusEnum = typeof EducationDTOStatusEnum[keyof typeof EducationDTOStatusEnum];


/**
 * Check if a given object implements the EducationDTO interface.
 */
export function instanceOfEducationDTO(value: object): value is EducationDTO {
    if (!('degree' in value) || value['degree'] === undefined) return false;
    if (!('course' in value) || value['course'] === undefined) return false;
    if (!('institution' in value) || value['institution'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('endDate' in value) || value['endDate'] === undefined) return false;
    return true;
}

export function EducationDTOFromJSON(json: any): EducationDTO {
    return EducationDTOFromJSONTyped(json, false);
}

export function EducationDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EducationDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'degree': json['degree'],
        'course': json['course'],
        'institution': json['institution'],
        'classification': json['classification'] == null ? undefined : json['classification'],
        'status': json['status'],
        'courseCode': json['courseCode'] == null ? undefined : json['courseCode'],
        'startDate': json['startDate'] == null ? undefined : (new Date(json['startDate'])),
        'endDate': (new Date(json['endDate'])),
        'thesis': json['thesis'] == null ? undefined : ThesisDTOFromJSON(json['thesis']),
    };
}

export function EducationDTOToJSON(json: any): EducationDTO {
    return EducationDTOToJSONTyped(json, false);
}

export function EducationDTOToJSONTyped(value?: EducationDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'degree': value['degree'],
        'course': value['course'],
        'institution': value['institution'],
        'classification': value['classification'],
        'status': value['status'],
        'courseCode': value['courseCode'],
        'startDate': value['startDate'] == null ? undefined : ((value['startDate']).toISOString().substring(0,10)),
        'endDate': ((value['endDate']).toISOString().substring(0,10)),
        'thesis': ThesisDTOToJSON(value['thesis']),
    };
}

