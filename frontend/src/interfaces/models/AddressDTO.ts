/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddressDTO
 */
export interface AddressDTO {
    /**
     * 
     * @type {number}
     * @memberof AddressDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AddressDTO
     */
    type: AddressDTOTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof AddressDTO
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof AddressDTO
     */
    zipCode: string;
    /**
     * 
     * @type {string}
     * @memberof AddressDTO
     */
    locality: string;
    /**
     * 
     * @type {string}
     * @memberof AddressDTO
     */
    municipality: string;
    /**
     * 
     * @type {string}
     * @memberof AddressDTO
     */
    country: string;
}


/**
 * @export
 */
export const AddressDTOTypeEnum = {
    Personal: 'Personal',
    Professional: 'Professional'
} as const;
export type AddressDTOTypeEnum = typeof AddressDTOTypeEnum[keyof typeof AddressDTOTypeEnum];


/**
 * Check if a given object implements the AddressDTO interface.
 */
export function instanceOfAddressDTO(value: object): value is AddressDTO {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    if (!('zipCode' in value) || value['zipCode'] === undefined) return false;
    if (!('locality' in value) || value['locality'] === undefined) return false;
    if (!('municipality' in value) || value['municipality'] === undefined) return false;
    if (!('country' in value) || value['country'] === undefined) return false;
    return true;
}

export function AddressDTOFromJSON(json: any): AddressDTO {
    return AddressDTOFromJSONTyped(json, false);
}

export function AddressDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'],
        'address': json['address'],
        'zipCode': json['zipCode'],
        'locality': json['locality'],
        'municipality': json['municipality'],
        'country': json['country'],
    };
}

export function AddressDTOToJSON(json: any): AddressDTO {
    return AddressDTOToJSONTyped(json, false);
}

export function AddressDTOToJSONTyped(value?: AddressDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'address': value['address'],
        'zipCode': value['zipCode'],
        'locality': value['locality'],
        'municipality': value['municipality'],
        'country': value['country'],
    };
}

