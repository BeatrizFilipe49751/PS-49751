/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProfessionalExperienceDTO
 */
export interface ProfessionalExperienceDTO {
    /**
     * 
     * @type {number}
     * @memberof ProfessionalExperienceDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ProfessionalExperienceDTO
     */
    institution: string;
    /**
     * 
     * @type {string}
     * @memberof ProfessionalExperienceDTO
     */
    role: string;
    /**
     * 
     * @type {string}
     * @memberof ProfessionalExperienceDTO
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof ProfessionalExperienceDTO
     */
    startDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof ProfessionalExperienceDTO
     */
    endDate?: Date;
}

/**
 * Check if a given object implements the ProfessionalExperienceDTO interface.
 */
export function instanceOfProfessionalExperienceDTO(value: object): value is ProfessionalExperienceDTO {
    if (!('institution' in value) || value['institution'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    return true;
}

export function ProfessionalExperienceDTOFromJSON(json: any): ProfessionalExperienceDTO {
    return ProfessionalExperienceDTOFromJSONTyped(json, false);
}

export function ProfessionalExperienceDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfessionalExperienceDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'institution': json['institution'],
        'role': json['role'],
        'description': json['description'] == null ? undefined : json['description'],
        'startDate': (new Date(json['startDate'])),
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
    };
}

export function ProfessionalExperienceDTOToJSON(json: any): ProfessionalExperienceDTO {
    return ProfessionalExperienceDTOToJSONTyped(json, false);
}

export function ProfessionalExperienceDTOToJSONTyped(value?: ProfessionalExperienceDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'institution': value['institution'],
        'role': value['role'],
        'description': value['description'],
        'startDate': ((value['startDate']).toISOString().substring(0,10)),
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString().substring(0,10)),
    };
}

