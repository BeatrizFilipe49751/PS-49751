/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SupervisorDTO
 */
export interface SupervisorDTO {
    /**
     * 
     * @type {number}
     * @memberof SupervisorDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof SupervisorDTO
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SupervisorDTO
     */
    role: SupervisorDTORoleEnum;
}


/**
 * @export
 */
export const SupervisorDTORoleEnum = {
    Supervisor: 'Supervisor',
    CoSupervisor: 'CoSupervisor'
} as const;
export type SupervisorDTORoleEnum = typeof SupervisorDTORoleEnum[keyof typeof SupervisorDTORoleEnum];


/**
 * Check if a given object implements the SupervisorDTO interface.
 */
export function instanceOfSupervisorDTO(value: object): value is SupervisorDTO {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function SupervisorDTOFromJSON(json: any): SupervisorDTO {
    return SupervisorDTOFromJSONTyped(json, false);
}

export function SupervisorDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SupervisorDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'role': json['role'],
    };
}

export function SupervisorDTOToJSON(json: any): SupervisorDTO {
    return SupervisorDTOToJSONTyped(json, false);
}

export function SupervisorDTOToJSONTyped(value?: SupervisorDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'role': value['role'],
    };
}

