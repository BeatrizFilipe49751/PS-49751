/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PhoneDTO
 */
export interface PhoneDTO {
    /**
     * 
     * @type {number}
     * @memberof PhoneDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof PhoneDTO
     */
    type: PhoneDTOTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof PhoneDTO
     */
    number: number;
    /**
     * 
     * @type {number}
     * @memberof PhoneDTO
     */
    countryCode?: number;
    /**
     * 
     * @type {string}
     * @memberof PhoneDTO
     */
    device: PhoneDTODeviceEnum;
}


/**
 * @export
 */
export const PhoneDTOTypeEnum = {
    Personal: 'Personal',
    Professional: 'Professional'
} as const;
export type PhoneDTOTypeEnum = typeof PhoneDTOTypeEnum[keyof typeof PhoneDTOTypeEnum];

/**
 * @export
 */
export const PhoneDTODeviceEnum = {
    Telephone: 'Telephone',
    Mobile: 'Mobile',
    Fax: 'Fax',
    Pager: 'Pager'
} as const;
export type PhoneDTODeviceEnum = typeof PhoneDTODeviceEnum[keyof typeof PhoneDTODeviceEnum];


/**
 * Check if a given object implements the PhoneDTO interface.
 */
export function instanceOfPhoneDTO(value: object): value is PhoneDTO {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('number' in value) || value['number'] === undefined) return false;
    if (!('device' in value) || value['device'] === undefined) return false;
    return true;
}

export function PhoneDTOFromJSON(json: any): PhoneDTO {
    return PhoneDTOFromJSONTyped(json, false);
}

export function PhoneDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): PhoneDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'],
        'number': json['number'],
        'countryCode': json['countryCode'] == null ? undefined : json['countryCode'],
        'device': json['device'],
    };
}

export function PhoneDTOToJSON(json: any): PhoneDTO {
    return PhoneDTOToJSONTyped(json, false);
}

export function PhoneDTOToJSONTyped(value?: PhoneDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'number': value['number'],
        'countryCode': value['countryCode'],
        'device': value['device'],
    };
}

