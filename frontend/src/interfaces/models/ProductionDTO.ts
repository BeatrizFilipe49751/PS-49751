/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductionDTO
 */
export interface ProductionDTO {
    /**
     * 
     * @type {number}
     * @memberof ProductionDTO
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    type: ProductionDTOTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof ProductionDTO
     */
    date: Date;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    doi?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    issn?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    isbn?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    secondaryTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    volume?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    version?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    platform?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    pageFrom?: string;
    /**
     * 
     * @type {string}
     * @memberof ProductionDTO
     */
    pageTo?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ProductionDTO
     */
    authors: Array<string>;
}


/**
 * @export
 */
export const ProductionDTOTypeEnum = {
    JournalArticle: 'JOURNAL_ARTICLE',
    Book: 'BOOK',
    EditedBook: 'EDITED_BOOK',
    BookChapter: 'BOOK_CHAPTER',
    Translation: 'TRANSLATION',
    NewspaperArticle: 'NEWSPAPER_ARTICLE',
    MagazineArticle: 'MAGAZINE_ARTICLE',
    Report: 'REPORT',
    Website: 'WEBSITE',
    Patent: 'PATENT',
    ResearchTechnique: 'RESEARCH_TECHNIQUE',
    Software: 'SOFTWARE',
    OtherOutput: 'OTHER_OUTPUT'
} as const;
export type ProductionDTOTypeEnum = typeof ProductionDTOTypeEnum[keyof typeof ProductionDTOTypeEnum];


/**
 * Check if a given object implements the ProductionDTO interface.
 */
export function instanceOfProductionDTO(value: object): value is ProductionDTO {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('authors' in value) || value['authors'] === undefined) return false;
    return true;
}

export function ProductionDTOFromJSON(json: any): ProductionDTO {
    return ProductionDTOFromJSONTyped(json, false);
}

export function ProductionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'title': json['title'],
        'type': json['type'],
        'date': (new Date(json['date'])),
        'description': json['description'] == null ? undefined : json['description'],
        'doi': json['doi'] == null ? undefined : json['doi'],
        'issn': json['issn'] == null ? undefined : json['issn'],
        'isbn': json['isbn'] == null ? undefined : json['isbn'],
        'url': json['url'] == null ? undefined : json['url'],
        'secondaryTitle': json['secondaryTitle'] == null ? undefined : json['secondaryTitle'],
        'volume': json['volume'] == null ? undefined : json['volume'],
        'version': json['version'] == null ? undefined : json['version'],
        'platform': json['platform'] == null ? undefined : json['platform'],
        'pageFrom': json['pageFrom'] == null ? undefined : json['pageFrom'],
        'pageTo': json['pageTo'] == null ? undefined : json['pageTo'],
        'authors': json['authors'],
    };
}

export function ProductionDTOToJSON(json: any): ProductionDTO {
    return ProductionDTOToJSONTyped(json, false);
}

export function ProductionDTOToJSONTyped(value?: ProductionDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'type': value['type'],
        'date': ((value['date']).toISOString().substring(0,10)),
        'description': value['description'],
        'doi': value['doi'],
        'issn': value['issn'],
        'isbn': value['isbn'],
        'url': value['url'],
        'secondaryTitle': value['secondaryTitle'],
        'volume': value['volume'],
        'version': value['version'],
        'platform': value['platform'],
        'pageFrom': value['pageFrom'],
        'pageTo': value['pageTo'],
        'authors': value['authors'],
    };
}

