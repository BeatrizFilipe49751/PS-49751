/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IdentifierDTO
 */
export interface IdentifierDTO {
    /**
     * 
     * @type {string}
     * @memberof IdentifierDTO
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof IdentifierDTO
     */
    type: IdentifierDTOTypeEnum;
}


/**
 * @export
 */
export const IdentifierDTOTypeEnum = {
    Orcid: 'ORCID',
    Wos: 'WOS',
    Scopus: 'SCOPUS',
    Google: 'GOOGLE',
    Authenticusid: 'AUTHENTICUSID',
    Lattesid: 'LATTESID'
} as const;
export type IdentifierDTOTypeEnum = typeof IdentifierDTOTypeEnum[keyof typeof IdentifierDTOTypeEnum];


/**
 * Check if a given object implements the IdentifierDTO interface.
 */
export function instanceOfIdentifierDTO(value: object): value is IdentifierDTO {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function IdentifierDTOFromJSON(json: any): IdentifierDTO {
    return IdentifierDTOFromJSONTyped(json, false);
}

export function IdentifierDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): IdentifierDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
    };
}

export function IdentifierDTOToJSON(json: any): IdentifierDTO {
    return IdentifierDTOToJSONTyped(json, false);
}

export function IdentifierDTOToJSONTyped(value?: IdentifierDTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
    };
}

